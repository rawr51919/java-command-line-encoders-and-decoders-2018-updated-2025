name: Build and Release JARs

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      release_type:
        description: 'Set to "main" for full release; else pre-release'
        required: false
        default: ''

permissions:
  contents: write   # needed to create releases

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      jars: ${{ steps.set-jars.outputs.jars }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up JDK 24
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 24

      - name: Compile and package Adler32
        run: |
          mkdir -p out/Adler32
          javac Adler32/CRAdler32.java -d out/Adler32
          jar cfe Adler32.jar CRAdler32 -C out/Adler32 .

      - name: Compile and package CRC32
        run: |
          mkdir -p out/CRC32
          javac CRC32/CRCRC32.java -d out/CRC32
          jar cfe CRC32.jar CRCRC32 -C out/CRC32 .

      - name: Compile and package Base32 (with dependency)
        run: |
          mkdir -p out/Base32
          shopt -s globstar
          javac Base32/**/*.java -d out/Base32
          jar cfe Base32.jar CRBase32 -C out/Base32 .

      - name: Compile and package Base64
        run: |
          mkdir -p out/Base64
          javac Base64/CRBase64.java -d out/Base64
          jar cfe Base64.jar CRBase64 -C out/Base64 .

      - name: Compile and package Base85 (with local com.orwell.util sources)
        run: |
          mkdir -p out/Base85
          shopt -s globstar
          javac Base85/**/*.java -d out/Base85
          jar cfe Base85.jar CRBase85 -C out/Base85 .

      - name: Compile and package Base85EncoderOnly
        run: |
          mkdir -p out/Base85EncoderOnly
          shopt -s globstar
          javac Base85EncoderOnly/**/*.java -d out/Base85EncoderOnly
          jar cfe Base85EncoderOnly.jar CRBase85EncoderOnly -C out/Base85EncoderOnly .

      - name: Compile and package Base91 (with dependency)
        run: |
          mkdir -p out/Base91
          shopt -s globstar
          javac Base91/**/*.java -d out/Base91
          jar cfe Base91.jar CRBase91 -C out/Base91 .

      - name: Compile and package Base91New (with dependencies)
        run: |
          mkdir -p out/Base91New
          shopt -s globstar
          javac Base91New/**/*.java -d out/Base91New
          jar cfe Base91New.jar CRBase91 -C out/Base91New .

      - name: Compile and package Base93 (with dependencies)
        run: |
          mkdir -p out/Base93
          shopt -s globstar
          javac Base93/**/*.java -d out/Base93
          jar cfe Base93.jar CRBase93 -C out/Base93 .

      - name: Compile and package CRC16 (with dependencies)
        run: |
          mkdir -p out/CRC16
          shopt -s globstar
          javac CRC16/**/*.java -d out/CRC16
          jar cfe CRC16.jar CRCRC16 -C out/CRC16 .

      - name: Compile and package MD4 (with dependencies)
        run: |
          mkdir -p out/MD4
          shopt -s globstar
          javac MD4/**/*.java -d out/MD4
          jar cfe MD4.jar CRMD4 -C out/MD4 .

      - name: Compile and package XYZ (with dependencies)
        run: |
          mkdir -p out/XYZ
          shopt -s globstar
          javac XYZ/**/*.java -d out/XYZ
          jar cfe XYZ.jar CRXYZ -C out/XYZ .

      - name: Compile and package UUEncodeEncoderOnly (with dependencies)
        run: |
          mkdir -p out/UUEncodeEncoderOnly
          shopt -s globstar
          javac UUEncodeEncoderOnly/**/*.java -d out/UUEncodeEncoderOnly
          jar cfe UUEncodeEncoderOnly.jar CRUUEncode -C out/UUEncodeEncoderOnly .


      - name: Set output JAR list
        id: set-jars
        run: |
          echo "jars=Adler32.jar CRC32.jar Base32.jar Base64.jar Base85.jar Base85EncoderOnly.jar Base91.jar Base91New.jar Base93.jar CRC16.jar MD4.jar XYZ.jar UUEncodeEncoderOnly.jar" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v5
        with:
          name: jar-files
          path: |
            Adler32.jar
            CRC32.jar
            Base32.jar
            Base64.jar
            Base85.jar
            Base85EncoderOnly.jar
            Base91.jar
            Base91New.jar
            Base93.jar
            CRC16.jar
            MD4.jar
            XYZ.jar
            UUEncodeEncoderOnly.jar

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download build artifacts
        uses: actions/download-artifact@v6
        with:
          name: jar-files
          path: ./jars

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: build-${{ github.run_number }}
          prerelease: ${{ github.event.inputs.release_type != 'main' }}
          files: |
            jars/Adler32.jar
            jars/CRC32.jar
            jars/Base32.jar
            jars/Base64.jar
            jars/Base85.jar
            jars/Base85EncoderOnly.jar
            jars/Base91.jar
            jars/Base91New.jar
            jars/Base93.jar
            jars/CRC16.jar
            jars/MD4.jar
            jars/XYZ.jar
            jars/UUEncodeEncoderOnly.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
